<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
		 http://www.springframework.org/schema/mvc 
         http://www.springframework.org/schema/mvc/spring-mvc.xsd">
         
	<mvc:annotation-driven>
		<mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
	</mvc:annotation-driven>
	<mvc:default-servlet-handler/>
	
	<context:property-placeholder location="classpath:dbconn.properties" />
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${driver}" />
		<property name="jdbcUrl" value="${url}" />
		<property name="user" value="${user}" />
		<property name="password" value="${password}" />
		<!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数 -->
		<property name="acquireIncrement" value="5"/>
		<!-- 初始连接池大小 -->
		<property name="initialPoolSize" value="10"/>
		<!-- 连接池中连接最小个数 -->
		<property name="minPoolSize" value="5"/>
		<!-- 连接池中连接最大个数 -->
		<property name="maxPoolSize" value="20"/>
	</bean>
	<!-- 配置会话工厂 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations" value="classpath:cn/smbms/dao/**/*Mapper.xml"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	
	<!-- 自动扫描对象关系映射 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- Mapper接口所在包 -->
		<property name="basePackage" value="cn.smbms.dao.*"/>
	</bean>
	 
	 <!-- 声明式事务管理 -->
	 <!-- 定义事务管理器 ，由spring管理-->
	 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	 	<property name="dataSource" ref="dataSource"></property>
	 </bean>
	 <!-- 自动扫描IOC组件 -->
	 <context:component-scan base-package="cn.smbms.**"/>
	 <!-- 支持注解驱动事务管理，指定事务管理器 -->
	 <tx:annotation-driven transaction-manager="transactionManager"/>
	 <!-- 自动代理实现AOP功能 -->
	 <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	 
	 <!-- aop配置实现事务管理 -->
	<!--  <tx:advice id="txadvice" transaction-manager="transactionManager">
	 	<tx:attributes>
	 		<tx:method name="*" isolation="DEFAULT" propagation="REQUIRED"/>
	 	</tx:attributes>
	 </tx:advice>
	 <aop:config>
	 	<aop:pointcut id="transfer" expression="execution(* com.service.TransferService.*(..))"/>
	 	<aop:advisor advice-ref="txadvice" pointcut-ref="transfer"/>
	 </aop:config>
	  -->
	  <mvc:interceptors>
	  	<mvc:interceptor>
	  		<!-- 要拦截的请求路径 -->
			<mvc:mapping path="/**"/>
			<!-- 不拦截的请求 -->
			<mvc:exclude-mapping path="/login.do"/>
			<mvc:exclude-mapping path="/**/*.js"/>
			<mvc:exclude-mapping path="/**/*.css"/>
			<mvc:exclude-mapping path="/**/*.png"/>
			<mvc:exclude-mapping path="/**/*.gif"/>
			<mvc:exclude-mapping path="/**/*.jpg"/> 
			<bean class="cn.smbms.interceptor.LoginInterceptor"/>
	  	</mvc:interceptor>
	  </mvc:interceptors>
	  
</beans>

